package ReGex;

import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class MirrorWords {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String regex = "([@#])(?<first>[A-Za-z]{3,})\\1\\1(?<second>[A-Za-z]{3,})\\1";
        Pattern pattern = Pattern.compile(regex);

        String input = scanner.nextLine();
        Matcher matcher = pattern.matcher(input);

        List<String> words = new ArrayList<>();
        int counter = 0;

        while (matcher.find()) {
            counter++;
            String first = matcher.group("first");
            String second = matcher.group("second");
            StringBuilder sb = new StringBuilder(second);
            sb.reverse();
            second = String.valueOf(sb);
            if (first.equals(second)) {
                words.add(first + " " + "<=>" + " " + matcher.group("second"));
            }
        }
        if (counter == 0) {
            System.out.println("No word pairs found!");
        } else {
            System.out.printf("%d word pairs found!%n", counter);
        }
        if (words.size() == 0) {
            System.out.println("No mirror words!");
        } else {
            System.out.println("The mirror words are:");
            System.out.println(words.toString().replaceAll("[\\[\\]]", ""));
        }
    }
}
